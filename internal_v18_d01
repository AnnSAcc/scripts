#!/bin/ksh
#internal
#Version 18.0
#Anna Shvetsova
#added Direct Debit payment request and response

get_acc_number(){
	echo -e 'Please, paste BillINVNUM Account number...'
	read acc_num
	export acc_num="$(echo "$acc_num")" 
}

#+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++



vaultVV(){
	
	# periodic --> ebill
	cd /d01/root/rbm/dev/infinys_root/Project_1ENG/output/periodicbill/ebill/vaultV
	find \( -iname "*.pdf" -o -iname "*.jrn" \) -print0 | xargs -I{} -0 cp -v {} /d01/root/rbm/dev/infinys_root/vaultVV/PBBI_CCM/vaultV/server/download
	
	# creditnote --> ebill
	cd /d01/root/rbm/dev/infinys_root/Project_1ENG/output/creditnote/ebill/vaultV
	find \( -iname "*.pdf" -o -iname "*.jrn" \) -print0 | xargs -I{} -0 cp -v {} /d01/root/rbm/dev/infinys_root/vaultVV/PBBI_CCM/vaultV/server/download
	
	# correctionbill --> ebill
	cd /d01/root/rbm/dev/infinys_root/Project_1ENG/output/correctionbill/ebill/vaultV
	find \( -iname "*.pdf" -o -iname "*.jrn" \) -print0 | xargs -I{} -0 cp -v {} /d01/root/rbm/dev/infinys_root/vaultVV/PBBI_CCM/vaultV/server/download
	
	# periodic --> print
	cd /d01/root/rbm/dev/infinys_root/Project_1ENG/output/periodicbill/print/vaultV
	find \( -iname "*.pdf" -o -iname "*.jrn" \) -print0 | xargs -I{} -0 cp -v {} /d01/root/rbm/dev/infinys_root/vaultVV/PBBI_CCM/vaultV/server/download
	
	# creditnote --> print
	cd /d01/root/rbm/dev/infinys_root/Project_1ENG/output/creditnote/print/vaultV
	find \( -iname "*.pdf" -o -iname "*.jrn" \) -print0 | xargs -I{} -0 cp -v {} /d01/root/rbm/dev/infinys_root/vaultVV/PBBI_CCM/vaultV/server/download

	# correctionbill --> print
	cd /d01/root/rbm/dev/infinys_root/Project_1ENG/output/correctionbill/print/vaultV
	find \( -iname "*.pdf" -o -iname "*.jrn" \) -print0 | xargs -I{} -0 cp -v {} /d01/root/rbm/dev/infinys_root/vaultVV/PBBI_CCM/vaultV/server/download

	
	# periodic --> noprint
	cd /d01/root/rbm/dev/infinys_root/Project_1ENG/output/periodicbill/noprint/vaultV
	find \( -iname "*.pdf" -o -iname "*.jrn" \) -print0 | xargs -I{} -0 cp -v {} /d01/root/rbm/dev/infinys_root/vaultVV/PBBI_CCM/vaultV/server/download
	
	# creditnote --> noprint
	cd /d01/root/rbm/dev/infinys_root/Project_1ENG/output/creditnote/noprint/vaultV
	find \( -iname "*.pdf" -o -iname "*.jrn" \) -print0 | xargs -I{} -0 cp -v {} /d01/root/rbm/dev/infinys_root/vaultVV/PBBI_CCM/vaultV/server/download
	
	# correctionbill --> noprint
	cd /d01/root/rbm/dev/infinys_root/Project_1ENG/output/correctionbill/noprint/vaultV
	find \( -iname "*.pdf" -o -iname "*.jrn" \) -print0 | xargs -I{} -0 cp -v {} /d01/root/rbm/dev/infinys_root/vaultVV/PBBI_CCM/vaultV/server/download
	

	
	cd /d01/root/rbm/dev/infinys_root/vaultVV/PBBI_CCM/vaultV
	
	./vaultV stop
	
	sleep 10
	
	./vaultV start
	
	sleep 10
	
	./exProc.sh
	print "vaultVV is finished"
	
	
}

#+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

#SMS amd EMAIL PERIODIC
sendINVNUM_SmsEmail_periodic (){
	cd /d01/root/rbm/dev/infinys_root/Project_1ENG/process
	./sf_filetran.sh PERIODICBILL > /d01/root/rbm/dev/infinys_root/a_script_logs/Sms_PERIODIC_$random5.log 2>&1
	sleep 2
	./ebill_filetransfer.sh PERIODICBILL > /d01/root/rbm/dev/infinys_root/a_script_logs/Email_PERIODIC_$random5.log 2>&1
	sleep 2
	./print_postprocessINVNUM.sh > /d01/root/rbm/dev/infinys_root/a_script_logs/Dresher_PERIODIC_$random5.log 2>&1
}

#SMS amd EMAIL CREDITNOTE
sendINVNUM_SmsEmail_creditnote (){
	cd /d01/root/rbm/dev/infinys_root/Project_1ENG/process
	./sf_filetran.sh CREDITNOTE > /d01/root/rbm/dev/infinys_root/a_script_logs/Sms_CREDITNOTE_$random5.log 2>&1
	sleep 2
	./ebill_filetransfer.sh CREDITNOTE > /d01/root/rbm/dev/infinys_root/a_script_logs/Email_CREDITNOTE_$random5.log 2>&1
	sleep 2
	./print_postprocessINVNUM.sh > /d01/root/rbm/dev/infinys_root/a_script_logs/Dresher_CREDITNOTE_$random5.log 2>&1
}

#SMS amd EMAIL CORRECTIONBILL
sendINVNUM_SmsEmail_correctionbill(){
	cd /d01/root/rbm/dev/infinys_root/Project_1ENG/process
	./sf_filetran.sh CORRECTIONBILL > /d01/root/rbm/dev/infinys_root/a_script_logs/Sms_CORRECTIONBILL_$random5.log 2>&1
	sleep 2
	./ebill_filetransfer.sh CORRECTIONBILL > /d01/root/rbm/dev/infinys_root/a_script_logs/Email_CORRECTIONBILL_$random5.log 2>&1
	sleep 2
	./print_postprocessINVNUM.sh > /d01/root/rbm/dev/infinys_root/a_script_logs/Dresher_CORRECTIONBILL_$random5.log 2>&1
}
#+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

#FOR "POSTAL PAYMENT" METHODS
get_CDV_number(){
    str=$acc_num"0" 
    arr=()
    i=0
        while [ "$i" -lt "${#str}" ]; do
        arr+=(${str:$i:1})
        i=$((i+1))
        done
    for (( index=1; index<${#arr[@]}; index+=2 ))
        do
            element=${arr[index]}
            mult=$(($element * 2))
                if [ $mult -gt 9 ]
                    then
                        result=$(($mult - 9))
                    else
                        result=$mult
                fi
            sum_even=$(($sum_even + $result))    
        done
    for (( index=0; index<${#arr[@]}; index+=2 ))
        do
            element=${arr[index]}
            sum_odd=$(($sum_odd + $element))    
        done
    sum_total=$(($sum_even + $sum_odd))
    mult_sum=$(($sum_total * 9))
	export mult_sum="$(echo "${mult_sum: -1}")" 
}	
get_input_date(){
	echo -e 'Please, enter payment date in followINVNUM format: YYYYMMDD'
	read input_date
	export input_date="$(echo -e "$input_date" | sed -e 's/[[:space:]]*$//')"
}

get_amount(){
	echo -e 'Please, enter amount in followINVNUM format: 
000000100'
	read amount
	export amount="$(echo -e "$amount")"
}

get_ID(){
	export gen="$(echo "$(shuf -i 1000000000000000-9999999999999999 -n 1)")"
}

get_num_for_filename(){
	export num_file="$(echo "$(shuf -i 100-999 -n 1)")"
}

get_file(){
	echo "19056300000040091634000001000000000""$amount""000000000000000000000000000000000000000000000000000000000        20190826
191630000004009163901140000010000000000000""$acc_num""$mult_sum""0""$amount""201019031451117931""$gen""20190506""$input_date" >> /d01/root/rbm/dev/infinys_root/a_script_logs/"$input_date"_"$num_file".dat
}

run_process(){
	cp /d01/root/rbm/dev/infinys_root/a_script_logs/"$input_date"_"$num_file".dat /ub01/nifi/Payment/POSTAL/input
	cd /d01/root/rbm/dev/infinys_root
	. ./infinys.env
	export GEN_FIXEDDAT=""$input_date" 00000000"
	NCPP -a "-mode POSTAL"  > /d01/root/rbm/dev/infinys_root/a_script_logs/NCPP_POSTAL_"$num_file".log 2>&1
	print "POSTAL process is finished, pls check log: /d01/root/rbm/dev/infinys_root/a_script_logs/NCPP_POSTAL_"$num_file".log"
	
}


#+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

#BANKTRANS PAYMENT 

get_input_date_bank(){
	echo -e 'Please, enter payment date in followINVNUM format: YYYYMMDD'
	read input_date_b
	export input_date_b="$(echo -e "$input_date_b" | sed -e 's/[[:space:]]*$//')"
}

#Дата, которая подставляется в файл
get_date_for_file_bank(){
	export date_for_file_b="$(echo "${input_date_b: -6}")"
}

get_amount_bank(){
	echo -e 'Please, enter amount in HUF in followINVNUM format: 2'
	read amount_b
	export amount_b="$(echo -e "$amount_b")"
}

get_ID_bank(){
	export gen_b="$(echo "$(shuf -i 1000000000000000-9999999999999999 -n 1)")"
}

get_num_for_filename_bank(){
	export num_file_b="$(echo "$(shuf -i 100-999 -n 1)")"
}

get_file_bank(){
	echo ":20:040091UF-224
:25:0400916901014
:28C:00224/001
:60F:C180HUF0,
:61:"$date_for_file_b"1121C"$amount_b",NTRFNONREF//"$gen_b"
:86:051?009500-IN PMT - CL?109500?20EREF+NOTPROVIDED?21SVWZ+SZLA:
"$acc_num" RTNR+?220010?30GIBAHUHB?31HU0377774300700000
6?32XXXXXXXXXXXX 
:62M:C18121HU48,
-" >>  /d01/root/rbm/dev/infinys_root/a_script_logs/MT940_kivonat_"$input_date_b"_"$num_file_b".txt
}

run_process_bank(){
	cp /d01/root/rbm/dev/infinys_root/a_script_logs/MT940_kivonat_"$input_date_b"_"$num_file_b".txt /ub01/nifi/Payment/BANKTRANS/input
	cd /d01/root/rbm/dev/infinys_root
	. ./infinys.env
	export GEN_FIXEDDAT=""$input_date_b" 00000000"
	NCPP -a "-mode BANKTRANS" > /d01/root/rbm/dev/infinys_root/a_script_logs/NCPP_BANKTRANS_"$num_file_b"_$random5.log 2>&1
	print "BANKTRANS Payment process is finished, pls check log: /d01/root/rbm/dev/infinys_root/a_script_logs/NCPP_BANKTRANS_"$num_file_b"_$random5.log"
}
#+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
#DEBT
run_DEBT(){
DEBT -a "-forceAccount "$acc_num" -allocateOverpay" > /d01/root/rbm/dev/infinys_root/a_script_logs/DEBT_"$acc_num"_$random5.log 2>&1
print "DEBT process is finished, pls check log: /d01/root/rbm/dev/infinys_root/a_script_logs/DEBT_"$acc_num"_$random5.log"
}
#+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
#Name for files
get_random_filename(){
	export random5="$(echo "$(shuf -i 10000-99999 -n 1)")"
}
#+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
#Direct Debit payment authorization 
DD_auth(){

	echo -e 'U – New authorization'
	echo -e 'D – Modification on date'
	echo -e 'L – Modification on limit'
	echo -e 'M – Modification of both date /limit'
	echo -e 'T – delete'
	echo -e 'Please, choose proper mode (U/D/L/M/T):'
	read mode
	export mode="$(echo "$mode")" 
	
	
	export num_file_DD="$(echo "$(shuf -i 1000-9999 -n 1)")"
	echo -e 'Please, paste START date of mandate...format: 20200112'
	read start_date
	export start_date="$(echo "$start_date")" 
	echo -e 'Please, paste END date of mandate...format: 20200701'
	read end_date
	export end_date="$(echo "$end_date")" 
	echo -e 'Please, paste LIMIT of mandate...format: 20000'
	read limit
	export limit="$(echo "$limit")" 
	

	
echo "01FELHKI0201912122217000000A11    									
02115          201912124843MTB Zrt. K”zpont      
0302000153"$mode"5927    "$acc_num"              3333000000000022        Man                           "$start_date""$end_date""$start_date"00000"$limit"Man                           2545 Dunaalm s Kis Łt 27.                                                                 									
040001									
0501		" >>  /d01/root/rbm/dev/infinys_root/a_script_logs/Direct_Debit_authorization_file_$start_date_$end_date_$num_file_DD.txt

	cp /d01/root/rbm/dev/infinys_root/a_script_logs/Direct_Debit_authorization_file_$start_date_$end_date_$num_file_DD.txt /d01/root/rbm/dev/infinys_root/Project/data/inbound/NCPP/DDPAYAUTH/input

	cd /d01/root/rbm/dev/infinys_root
	source infinys.env
	ulimit -c unlimited
	export TRACE_LEVEL=FULL
	export TRACE_ALL=ON
	export GEN_FIXEDDAT="$start_date 00000000"
	NCPP -a "-mode DDPAYAUTH" > /d01/root/rbm/dev/infinys_root/a_script_logs/Direct_Debit_auth_LOG_$start_date_$end_date_$num_file_DD.log 2>&1

	echo -e 'Direct Debit payment authorization process is finished!'
	echo -e 'Please, check the rezult: '
	echo -e 'select * from prmandate;'
	echo -e 'select * from accountdetails where account_num='$acc_num';'
	echo -e 'select * from VFHU_DDPAYAUTHINFO;'
	echo -e 'select * from paymentmethod;'
	echo -e 'Pls check log here: /d01/root/rbm/dev/infinys_root/a_script_logs/Direct_Debit_auth_LOG_'$start_date'_'$end_date'_'$num_file_DD'.log'

	
}
#+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
#Direct Debit payment request
 DD_request () {
	export num_file_DD_request="$(echo "$(shuf -i 1000-9999 -n 1)")"
	echo -e 'pls do not forget to set SYSdateValue date the first in BD!'
	echo -e 'pls paste date for processINVNUM in the followINVNUM format:20200112'
	echo -e 'note: date = payment_due_dat.billsummary - 8 days'
	read date_DD_request
	export date_DD_request="$(echo "$date_DD_request")"
	cd /d01/root/rbm/dev/infinys_root
	source infinys.env
	ulimit -c unlimited
	export TRACE_LEVEL=FULL
	export TRACE_ALL=ON
	export GEN_FIXEDDAT="$date_DD_request 00000000"
	NCPP -a "-mode DDPAYREQS" > /d01/root/rbm/dev/infinys_root/a_script_logs/DD_pay_request_$num_file_DD_request.log 2>&1
	echo -e 'Check: select * from paymentrequest; - request should be created and status = 2
Check: /d01/root/rbm/dev/infinys_root/Project/data/outbound/NCPP/DDPAYREQS/output - request file should be created
log here: /d01/root/rbm/dev/infinys_root/a_script_logs/DD_pay_request_LOG_'$num_file_DD_request'.log'
 }
#+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
#Direct Debit payment response
DD_response () {
	export num_file_DD_response="$(echo "$(shuf -i 1000-9999 -n 1)")"
	echo -e 'pls do not forget to set SYSdateValue date the first in BD!'
	echo -e 'pls paste date for processINVNUM in the followINVNUM format:20200112'
	echo -e 'note: date = payment_due_dat.billsummary - 8 days'
	read date_DD_response
	export date_DD_response="$(echo "$date_DD_response")"
	cd /d01/root/rbm/dev/infinys_root
	source infinys.env
	ulimit -c unlimited
	export TRACE_LEVEL=FULL
	export TRACE_ALL=ON
	export GEN_FIXEDDAT="$date_DD_response 00000000"
	echo -e 'pls paste amount in the followINVNUM format 20000'
	read amount
	export amount="$(echo "$amount")" 
	#echo -e 'pls paste account_num'
	#read acc_num
	#export acc_num="$(echo "$acc_num")" 
	export random_value4="$(echo "$(shuf -i 1000-9999 -n 1)")"
	export random_value6="$(echo "$(shuf -i 100000-999999 -n 1)")"
	echo "01DETSTA0A11895927    202001140001"$date_DD_response"8846181941						
0200000100000"$amount""$date_DD_response"00"$date_DD_response""$date_DD_response""$random_value4"   02529"$date_DD_response"000"$random_value6"1317   05008"$date_DD_response"658514500"$acc_num"                						                						
030000010000000"$amount"000000000000000000000000000000000000000000000000						" >> /d01/root/rbm/dev/infinys_root/a_script_logs/Direct_Debit_response_file_$num_file_DD_response.txt

	cp /d01/root/rbm/dev/infinys_root/a_script_logs/Direct_Debit_response_file_$num_file_DD_response.txt /d01/root/rbm/dev/infinys_root/Project/data/inbound/NCPP/DDPAYRESP/input

	NCPP -a "-mode DDPAYRESP" > /d01/f/rbm/dev/infinys_root/a_script_logs/Direct_Debit_LOG_response_file_$num_file_DD_response.log 2>&1
	echo -e 'Check: select * from paymentrequest; - request should be created and status = 3'
	echo -e 'log here: /d01/root/rbm/dev/infinys_root/a_script_logs/Direct_Debit_response_file_'$num_file_DD_response'.log'
	}
#+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
recursion () {
	#Здесь было иначе в версии v4
	get_acc_number

	echo "Select process that you want to generate"
	echo "1  - Periodic Bill"
	echo "2  - Termination Bill"
	echo "3  - Credit Note"
	echo "4  - Correction Note"
	echo "5  - Test Bill"
	echo "6  - Postal payment"
	echo "7  - Bank transfer"
	echo "8  - vaultVV process"
	echo "9  - DEBT"
	echo "10 - Direct Debit payment authorization"
	echo "11 - Direct Debit payment request"
	echo "12 - Direct Debit payment response"
	
	print -n "Select process to continue : "

	read press

	if [ $press == '1' ] || [ $press == '2' ]; then

		if [ $press == '1' ]; then
		
			
			nbd=`sqlplus -S $DATABASE <<EOF
				set head off pages 0 feedback off serveroutput on
			
				DECLARE
					v_next_billed_date VARCHAR2 (100) ;
			
				BEGIN
					SELECT TO_CHAR(NEXT_BILL_DTM,'YYYYMMDD')INTO v_next_billed_date FROM ACCOUNT WHERE ACCOUNT_NUM='${acc_num}';
					dbms_output.put_line (v_next_billed_date);
				EXCEPTION
					WHEN NO_DATA_FOUND
					THEN
					dbms_output.put_line('Noaccount');
			
				END;
				/
				QUIT
				EOF` 
			
		
		elif [ $press == '2' ]; then
		
		
			nbd=`sqlplus -S $DATABASE <<EOF
				set head off pages 0 feedback off serveroutput on
			
				DECLARE
					v_next_billed_date VARCHAR2 (100) ;
			
				BEGIN
					SELECT TO_CHAR(BILL_DAT,'YYYYMMDD') INTO v_next_billed_date FROM BILLREQUEST WHERE ACCOUNT_NUM='${acc_num}' AND BILL_TYPE_ID=4 AND BILL_SEQ IS NULL;
					dbms_output.put_line (v_next_billed_date);
				EXCEPTION
					WHEN NO_DATA_FOUND
					THEN
					dbms_output.put_line('Norequest');
			
				END;
				/
				QUIT
				EOF` 
		fi
		
		if [ $nbd == "Noaccount" ]; then
		
			print "Account Number does not exist in DB !!! Please check again"
		
		elif [ $nbd == 'Norequest' ]; then
		
			print "No termination bill request !!!"
		
		else
		
			print -n "Account number is $acc_num and Next bill date is $nbd !!! Press y / n to continue : "
			read key
			
			
			if [ $key == 'y' ]; then
				
				export GEN_FIXEDDAT="$nbd 00000000"
				
				if [ $press == '1' ]; then
					
					BB -a "-a $acc_num" > /d01/root/rbm/dev/infinys_root/a_script_logs/BB_$acc_num-P001_$random5.log 2>&1
					
				elif [ $press == '2' ]; then
				
					BB -a "-a $acc_num -bt termination" > /d01/root/rbm/dev/infinys_root/a_script_logs/BB_$acc_num-P001_$random5.log 2>&1
				
				fi		
					
					if [ $? != 0 ]; then
						echo "Error in BB command. Please check logs !!!"
					else
						echo "BB completed Successfully!!!"
						INVNUM -a '-ir 1' > /d01/root/rbm/dev/infinys_root/a_script_logs/INVNUM_$acc_num-P001_$random5.log 2>&1
						
						if [ $? != 0 ]; then
							echo "Error in INVNUM. Please check logs !!!"
						else
							echo "INVNUM completed Successfully!!!"
							
							#ТУТ ДОБАВЛЕН КУСОК ДЛЯ ПОЛУЧЕНИЯ PROCESS instance ID
							iid=`sqlplus -S $DATABASE <<EOF
							set head off pages 0 feedback off serveroutput on
						
							DECLARE
								v_id NUMBER(9);
							BEGIN
								SELECT PROCESS_INSTANCE_ID INTO v_id FROM PROCESSINSTANCELOG WHERE PROCESS_DEF_ID IN (SELECT PROCESS_DEF_ID FROM PROCESSDEFINITION WHERE IMAGE_NAME = 'BGW');
								dbms_output.put_line (v_id);
							EXCEPTION
								WHEN NO_DATA_FOUND
								THEN
								dbms_output.put_line('No_processinstanceid_need_to_check_PROCESSINSTANCELOG');
							END;
							/
							QUIT
							EOF` 
							
							BGW -m WORK -p $iid -a "-formatterID 1 -bill" > /d01/root/rbm/dev/infinys_root/a_script_logs/BGW_work_$acc_num-P001_$random5.log 2>&1
							
							if [ $? != 0 ]; then
								echo "Error in BGW work command. Please check logs !!!"
							else
								echo "BGW work completed Successfully!!!"
								BGW -m COMPLETE -p $iid -a "-formatterID 1 -bill" > /d01/root/rbm/dev/infinys_root/a_script_logs/BGW2_compl_$acc_num-P001_$random5.log 2>&1
								
								if [ $? != 0 ]; then
									echo "Error in BGW Complete command. Please check logs !!!"
								else
									echo "BGW Complete process completed Successfully!!!"
				
	#								output_line=`sqlplus $DATABASE<<EOF
	#								set echo off;
	#								set headINVNUM off;
	#								set feedback off;
	#						
	#								UPDATE JOB SET JOB_STATUS=2 WHERE JOB_ID IN (SELECT JOB_ID FROM JOBHASFILE WHERE MANAGED_FILE_ID IN (SELECT  MAX(CAST(RTRIM(LTRIM( ARCHIVE_NAME, 'GF'), '.GMF') AS INT)) FROM FORMATTINVNUMREQUEST WHERE ACCOUNT_NUM=$acc_num));
	#								COMMIT;
	#								exit;
	#								EOF`
	#						
	#								echo "JOB status updated"
									

									FMF -a "-fileType production_bill_data -plugInPath $INFINYS_ROOT/RB/lib/liBBnvJIBP.so" > /d01/root/rbm/dev/infinys_root/a_script_logs/FMF_acc$acc_num-test_001_$random5.log 2>&1
					
				
									if [ $? != 0 ]; then
										echo "Error in FMF process. Please check logs !!!"
									else
										echo "FMF completed Successfully!!!"
										
										if grep -q "satisfies invoice suppression rules" /d01/root/rbm/dev/infinys_root/a_script_logs/FMF_acc$acc_num-test_001_$random5.log; then
											
											echo "Invoice suppressed as no chargeable entity exists for account $acc_num"
											
										
										else
											
											echo "DOC1 process started"
											
											1EXT > /d01/root/rbm/dev/infinys_root/a_script_logs/EXP_$acc_num_$random5.log 2>&1
						
											cd $INFINYS_ROOT/Project/data/outbound/1EXT/PRODUCTION
										
											grep -l $acc_num *$nbd* > 1.txt
											datfile=$(head -n 1 1.txt)
											sed -i 's/dat/log/' 1.txt
											logfile=$(head -n 1 1.txt)
											
											sleep 1
											
											rm 1.txt
											
											billref=$(grep -i BILLREF $datfile | cut -b 36-46)
											bhct=$(grep -i BILLHANDLINVNUMCODE $datfile | cut -b 36-)
											bhc=${bhct%?}
																	
											cp $INFINYS_ROOT/Project/data/outbound/1EXT/PRODUCTION/$datfile $INFINYS_ROOT/Project_1ENG/input/periodicbill
										
											cd $INFINYS_ROOT/Project_1ENG/process
											export DOC1_ROOT=$INFINYS_ROOT/Project_1ENG
											./vfhg_periodicbill.sh > /d01/root/rbm/dev/infinys_root/a_script_logs/Doc1_$acc_num_$random5.log 2>&1
											
											sleep 2
											
											cd $INFINYS_ROOT/Project_1ENG/logs/periodicbill
																		
											
											if grep -q "DOC1 doc1gen successful" $logfile; then
												print "DOC1 process completed"
												print "Invoice generated successfully"
												print "Invoice Name = ${billref}_${acc_num}_${nbd}_${bhc}.pdf"
												
												if [ $bhc == 'PAPER' ] || [ $bhc == 'INTPOST' ]; then
													print "Please find Invoice in /d01/root/rbm/dev/infinys_root/Project_1ENG/output/periodicbill/print"
												elif [ $bhc == 'NOPRINT' ]; then
													print "Please find Invoice in /d01/root/rbm/dev/infinys_root/Project_1ENG/output/periodicbill/noprint"
												else
													print "Please find Invoice in /d01/root/rbm/dev/infinys_root/Project_1ENG/output/periodicbill/ebill"
												fi
												
											else
												print "DOC1 process completed"
												print "Invoice generation failed with errors!!! Please check log /d01/root/rbm/dev/infinys_root/Project_1ENG/logs/periodicbill/$logfile"
												print "Please find Invoice in /d01/root/rbm/dev/infinys_root/Project_1ENG/output/"
					
											fi #DOC1 
										fi	#if grep -q "satisfies invoice suppression rules" FMF_acc$acc_num-test_001.log; then
									fi #FMF error
								fi #BGW
							fi #BGW
						fi  #INVNUM
					fi #BB error
					
				sendINVNUM_SmsEmail_periodic	
			
			else
				echo "Process Aborted !!!"
			fi
		
			
		fi #if [ $nbd == "Noaccount" ]
		
		
	elif [ $press == '3' ]; then

		print -n "Do you want to Format Credit Note ??? Press y / n to continue : "
		read cnreq
		
					#SELECT TO_CHAR(BILL_DAT,'YYYYMMDD'), BILL_SEQ INTO v_billreq_dtm, v_billseq FROM BILLREQUEST WHERE ACCOUNT_NUM=$acc_num AND BILL_TYPE_ID in (5,9) AND BILL_SEQ IN (
					#SELECT MAX(BILL_SEQ) FROM BILLREQUEST WHERE ACCOUNT_NUM=$acc_num AND BILL_TYPE_ID in (5,9) AND BILL_REQUEST_STATUS=2);
		
		if [ $cnreq == 'y' ]; then
			
			billreq=`sqlplus -S $DATABASE <<EOF
				set head off pages 0 feedback off serveroutput on
			
				DECLARE
					v_billreq_dtm VARCHAR2 (100) ;
					v_billseq NUMBER(10);
					v_formreq_status NUMBER(10);

				BEGIN
					
					SELECT TO_CHAR(BILL_DAT,'YYYYMMDD'), BILL_SEQ INTO v_billreq_dtm, v_billseq FROM BILLREQUEST WHERE ACCOUNT_NUM=$acc_num AND BILL_TYPE_ID in (5,9) AND BILL_REQUEST_STATUS=2;
				   
					SELECT REQUEST_STATUS INTO v_formreq_status FROM FORMATTINVNUMREQUEST WHERE ACCOUNT_NUM=$acc_num AND BILL_SEQ = v_billseq;
				  
					IF v_formreq_status = '1' THEN
						dbms_output.put_line (v_billreq_dtm);
					ELSIF v_formreq_status = '3' THEN
						dbms_output.put_line ('Processed');
					END IF;
					
				EXCEPTION
					WHEN NO_DATA_FOUND
					THEN
					dbms_output.put_line('Nodata' );
			
				END;
				/
				QUIT
				EOF` 
			
			if [ $billreq == 'Processed' ]; then
			
				echo "All credit note requests have been processed !!!"
				
			elif [ $billreq == 'Nodata' ]; then
			
				echo "No Credit note requests found for $acc_num"
			
			else
				
				export GEN_FIXEDDAT="$v_billreq_dtm 00000000"
				
				INVNUM -a '-ir 1' > /d01/root/rbm/dev/infinys_root/a_script_logs/INVNUM_$acc_num-P001_$random5.log 2>&1
				
				if [ $? != 0 ]; then
					echo "Error in INVNUM. Please check logs !!!"
				else
					echo "INVNUM completed Successfully!!!"
					BGW -m WORK -a "-formatterID 1" > /d01/root/rbm/dev/infinys_root/a_script_logs/BGW_work_$acc_num-P001_$random5.log 2>&1
					
					if [ $? != 0 ]; then
						echo "Error in BGW work command. Please check logs !!!"
					else
						echo "BGW work completed Successfully!!!"
						BGW -m COMPLETE -a "-formatterID 1" > /d01/root/rbm/dev/infinys_root/a_script_logs/BGW2_compl_acc$acc_num-P001_$random5.log 2>&1
						
						if [ $? != 0 ]; then
							echo "Error in BGW Complete command. Please check logs !!!"
						else
							echo "BGW Complete process completed Successfully!!!"
			
							output_line=`sqlplus $DATABASE<<EOF
							set echo off;
							set headINVNUM off;
							set feedback off;
					
							UPDATE JOB SET JOB_STATUS=2 WHERE JOB_ID IN (SELECT JOB_ID FROM JOBHASFILE WHERE MANAGED_FILE_ID IN (SELECT  MAX(CAST(RTRIM(LTRIM( ARCHIVE_NAME, 'GF'), '.GMF') AS INT)) FROM FORMATTINVNUMREQUEST WHERE ACCOUNT_NUM=$acc_num));
							COMMIT;
							exit;
							EOF`
					
							echo "JOB status updated"
						
							FMF -a "-fileType production_bill_data -plugInPath $INFINYS_ROOT/RB/lib/liBBnvJIBP.so" > /d01/root/rbm/dev/infinys_root/a_script_logs/FMF_acc$acc_num-P001_$random5.log 2>&1
									
							if [ $? != 0 ]; then
								echo "Error in FMF process. Please check logs !!!"
							else
								echo "FMF completed Successfully!!!"
								1EXT > /d01/root/rbm/dev/infinys_root/a_script_logs/EXP_$acc_num_$random5.log 2>&1
				
								cd $INFINYS_ROOT/Project/data/outbound/1EXT/PRODUCTION
							
								grep -l $acc_num *$billreq* > 1.txt
								datfile=$(head -n 1 1.txt)
								sed -i 's/dat/log/' 1.txt
								logfile=$(head -n 1 1.txt)
								
								sleep 1
								
								rm 1.txt
							
								cp $INFINYS_ROOT/Project/data/outbound/1EXT/PRODUCTION/$datfile $INFINYS_ROOT/Project_1ENG/input/creditnote
							
								cd $INFINYS_ROOT/Project_1ENG/process
								export DOC1_ROOT=$INFINYS_ROOT/Project_1ENG
								./vfhg_creditnote.sh > /d01/root/rbm/dev/infinys_root/a_script_logs/Doc1_$acc_num_$random5.log 2>&1
								
								sleep 2
								
								cd $INFINYS_ROOT/Project_1ENG/logs/creditnote
								
								
								if grep -q "DOC1 doc1gen successful" $logfile; then
									print "Credit Note generated successfully"
									print "Please find Credit Note in /d01/root/rbm/dev/infinys_root/Project_1ENG/output/creditnote"
								else
									print "Credit Note generation failed with errors!!! Please check log /d01/root/rbm/dev/infinys_root/Project_1ENG/logs/creditnote/$logfile"
			
								fi
							fi
						fi
					fi
				fi
				
			fi
			
			sendINVNUM_SmsEmail_creditnote
			
		else
			echo "Process Aborted !!!"
		
		fi
		
	elif [ $press == '4' ]; then

		print -n "Do you want to Format Correction Note ??? Press y / n to continue : "
		read cnreq
		
		if [ $cnreq == 'y' ]; then
			
			
			billreq=`sqlplus -S $DATABASE <<EOF
				set head off pages 0 feedback off serveroutput on
			
				DECLARE
					v_request_dtm VARCHAR2 (100) ;
			
				BEGIN
					SELECT TO_CHAR(REQUEST_DTM,'YYYYMMDD') INTO v_request_dtm FROM VFHU_CORRECTIONBILLREQUEST WHERE ACCOUNT_NUM=${acc_num} AND REQUEST_STATUS='CREATED';
					
					IF v_request_dtm IS NOT NULL THEN
						dbms_output.put_line (v_request_dtm);
					ELSE
						dbms_output.put_line ('Norequest');
					END IF;
					
				EXCEPTION
					WHEN NO_DATA_FOUND
					THEN
					dbms_output.put_line('Nodata' );
			
				END;
				/
				QUIT
				EOF` 
			
			if [ $billreq == 'Norequest' ]; then
			
				echo "No pendINVNUM Correction note request for $acc_num !!!"
				
			elif [ $billreq == 'Nodata' ]; then
			
				echo "No Correction note requests found for $acc_num !!!"
			
			else
				
							
				print -n "Latest Correction note request for Account $acc_num is on $billreq . Press y / n to continue : "
				read perm
				
				if [ $perm == 'y' ]; then
				
					
					export GEN_FIXEDDAT="$billreq 00000000"
					
					PreBB -a "-mode BILLCORRECTION" > /d01/root/rbm/dev/infinys_root/a_script_logs/PREBB_BC_$acc_num-P001_$random5.log 2>&1
					
					if [ $? != 0 ]; then
					
						echo "Error in PreBB process. Please check logs !!!"
					
					else
						
						echo "PreBB for Correction bill ran successfully !!!"
						
						invnum=`sqlplus -S $DATABASE <<EOF
						set head off pages 0 feedback off serveroutput on
					
						DECLARE
							v_invoice_num VARCHAR2 (100) ;
					
						BEGIN
							SELECT MAX(INVOICE_NUM) INTO v_invoice_num FROM VFHU_CORRECTIONBILLREQUEST WHERE ACCOUNT_NUM=${acc_num};
							
							IF v_invoice_num IS NOT NULL THEN
								dbms_output.put_line (v_invoice_num);
							ELSE
								dbms_output.put_line ('Norequest');
							END IF;
							
						EXCEPTION
							WHEN NO_DATA_FOUND
							THEN
							dbms_output.put_line('Nodata' );
					
						END;
						/
						QUIT
						EOF`
				
											
						echo "Correction bill invoice number is $invnum"		
						
						cd $INFINYS_ROOT/Project/data/outbound/PreBB/BILLCORRECTION/output
						
						grep -l $invnum * >> 1.txt
						datfile=$(head -n 1 1.txt)
						sed -i 's/dat/log/' 1.txt
						logfile=$(head -n 1 1.txt)
						
						sleep 1
						
						rm 1.txt
						
						
						cp $INFINYS_ROOT/Project/data/outbound/PreBB/BILLCORRECTION/output/$datfile $INFINYS_ROOT/Project_1ENG/input/correctionbill
						
						cd $INFINYS_ROOT/Project_1ENG/process
						export DOC1_ROOT=$INFINYS_ROOT/Project_1ENG
						./vfhg_correctionbill.sh > /d01/root/rbm/dev/infinys_root/a_script_logs/Doc1_$acc_num_$random5.log 2>&1
						
						sleep 2
						
						cd $INFINYS_ROOT/Project_1ENG/logs/correctionbill
						
						if grep -q "DOC1 doc1gen successful" $logfile; then
							print "Correction Note generated successfully"
							print "Please find Correction Note in /d01/root/rbm/dev/infinys_root/Project_1ENG/output/correctionbill"
						else
							print "Correction Note generation failed with errors!!! Please check log /d01/root/rbm/dev/infinys_root/Project_1ENG/logs/correctionbill/$logfile"
						fi
					
					fi
					sendINVNUM_SmsEmail_correctionbill
				else
				
					echo "Process Aborted :( !!!"
				
				fi			
					
			fi
		else
			echo "Process Aborted :( !!!"
			
		fi
		
		
		#New code
	elif [ $press == '5' ]; then
		print -n "Do you want to Test Bill ??? Press y / n to continue : "
		read cnreq
		
		if [ $cnreq == 'y' ]; then
		nbd=`sqlplus -S $DATABASE <<EOF
				set head off pages 0 feedback off serveroutput on
			
				DECLARE
					v_next_billed_date VARCHAR2 (100) ;
			
				BEGIN
					SELECT TO_CHAR(NEXT_BILL_DTM,'YYYYMMDD')INTO v_next_billed_date FROM ACCOUNT WHERE ACCOUNT_NUM='${acc_num}';
					dbms_output.put_line (v_next_billed_date);
				EXCEPTION
					WHEN NO_DATA_FOUND
					THEN
					dbms_output.put_line('Noaccount');
			
				END;
				/
				QUIT
				EOF`

		if [ $nbd == "Noaccount" ]; then
		
			print "Account Number does not exist in DB !!! Please check again"

		else
		
			print -n "Account number is $acc_num and Next bill date is $nbd !!! Press y / n to continue : "
			read key
			
			if [ $key == 'y' ]; then
				
				export GEN_FIXEDDAT="$nbd 00000000"
				
				if [ $press == '5' ]; then
					BB -a "-a $acc_num -test -outputTestBillData" > /d01/root/rbm/dev/infinys_root/a_script_logs/BBTEST_$acc_num-P001_$random5.log 2>&1
				fi		
					
					if [ $? != 0 ]; then
						echo "Error in BB command. Please check logs !!!"
					else
						echo "BB completed Successfully!!!"
						TBDP -a "-account $acc_num"
						
						if [ $? != 0 ]; then
							echo "Error in TBDP. Please check logs !!!"
						else
							echo "TBDP completed Successfully!!!"
							
								FMF -a "-fileType test_bill_data -plugInPath /d01/root/rbm/dev/infinys_root/RB/lib/liBBnvJIBP.so" > /d01/root/rbm/dev/infinys_root/a_script_logs/FMF_$acc_num-test_001_$random5.log 2>&1
					
				
								if [ $? != 0 ]; then
									echo "Error in FMF process. Please check logs !!!"
								else
									echo "FMF completed Successfully!!!"
										
									if grep -q "satisfies invoice suppression rules" /d01/root/rbm/dev/infinys_root/a_script_logs/FMF_$acc_num-test_001_$random5.log; then
											
										echo "Invoice suppressed as no chargeable entity exists for account $acc_num"
											
										
									else
											
										echo "DOC1 process started"
											
										1EXT > /d01/root/rbm/dev/infinys_root/a_script_logs/EXP_$acc_num_$random5.log 2>&1
						
										cd /d01/root/rbm/dev/infinys_root/Project/data/outbound/1EXT/TEST
										
										grep -l $acc_num *$nbd* > 1.txt
										datfile=$(head -n 1 1.txt)
										sed -i 's/dat/log/' 1.txt
										logfile=$(head -n 1 1.txt)
											
										sleep 1
											
										rm 1.txt
											
										billref=$(grep -i BILLREF $datfile | cut -b 36-46)
										bhct=$(grep -i BILLHANDLINVNUMCODE $datfile | cut -b 36-)
										bhc=${bhct%?}
											

										cp /d01/root/rbm/dev/infinys_root/Project/data/outbound/1EXT/TEST/$datfile /d01/root/rbm/dev/infinys_root/a_script_logs/Project_1ENG/input/periodicbill
										
										#ПРОВЕРИТЬ НАВИГАЦИЮ
										cd /d01/root/rbm/dev/infinys_root/Project_1ENG/process
										export DOC1_ROOT=/d01/root/rbm/dev/infinys_root/Project_1ENG
										./vfhg_periodicbill.sh > /d01/root/rbm/dev/infinys_root/a_script_logs/Doc1_TEST_$acc_num_$random5.log 2>&1
										
										sleep 2
										
										
										#ПРОВЕРИТЬ НАВИГАЦИЮ
										cd /d01/root/rbm/dev/infinys_root/Project_1ENG/logs/periodicbill
																		
										#ПРОВЕРИТЬ ПОДПИСИ
										if grep -q "DOC1 doc1gen successful" $logfile; then
												print "DOC1 process completed"
												print "Test invoice generated successfully"
												print "Invoice Name = ${billref}_${acc_num}_${nbd}_${bhc}.pdf"
												
												if [ $bhc == 'PAPER' ] || [ $bhc == 'INTPOST' ]; then
													print "Please find Invoice in /d01/root/rbm/dev/infinys_root/Project_1ENG/output/periodicbill/(print or test)"
												elif [ $bhc == 'NOPRINT' ]; then
													print "Please find Invoice in /d01/root/rbm/dev/infinys_root/Project_1ENG/output/periodicbill/(noprint or test)"
												else
													print "Please find Invoice in /d01/root/rbm/dev/infinys_root/Project_1ENG/output/periodicbill/(ebill or test)"
												fi
												
											else
												print "DOC1 process completed"
												print "Invoice generation failed with errors!!! Please check log /d01/root/rbm/dev/infinys_root/Project_1ENG/logs/periodicbill/$logfile"
					
											fi
										fi	
									fi
								fi
							fi
						fi
					fi
			
			else
				echo "Process Aborted !!! Что-то пошло не так.. исследуйте логи.."
			fi

	#+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

		#ВСТАВКА ДЛЯ POSTAL PAYMENT
		elif [ $press == '6' ]; then
			get_input_date
			get_amount
			get_CDV_number
			get_ID
			get_num_for_filename
			get_file
			run_process
		#КОНЕЦ ВСТАВКИ

	#+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		
		#ВСТАВКА ДЛЯ BANKTRANS
		elif [ $press == '7' ]; then
			get_input_date_bank
			get_date_for_file_bank
			get_amount_bank
			get_ID_bank
			get_num_for_filename_bank
			get_file_bank
			run_process_bank
		#КОНЕЦ ВСТАВКИ

	#+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

		#ВСТАВКА ДЛЯ vaultVV
		elif [ $press == '8' ]; then
			vaultVV
		#КОНЕЦ ВСТАВКИ
		
	#+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	
		#ВСТАВКА ДЛЯ DEBT
		elif [ $press == '9' ]; then
			run_DEBT
		#КОНЕЦ ВСТАВКИ
		
	#+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	
		#ВСТАВКА ДЛЯ Direct Debit payment authorization
		elif [ $press == '10' ]; then
			DD_auth
		#КОНЕЦ ВСТАВКИ
		
	#+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	
		#ВСТАВКА ДЛЯ Direct Debit payment request
		elif [ $press == '11' ]; then
			DD_request
		#КОНЕЦ ВСТАВКИ
		
		#+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	
		#ВСТАВКА ДЛЯ Direct Debit payment response
		elif [ $press == '12' ]; then
			DD_response
		#КОНЕЦ ВСТАВКИ
		
	fi

print -n "Do you want to do this script for another account ??? Press y / n to continue :"
read continue
if [ $continue == 'y' ]; then
		cd /d01/root/rbm/dev/infinys_root
		recursion
elif [ $continue == 'n' ]; then
		echo "понял! не буду!"
		echo "Done! :) End of Script!!! Thank you :)"
fi
}

cd /d01/root/rbm/dev/infinys_root
source infinys.env
ulimit -c unlimited
export TRACE_LEVEL=FULL
export TRACE_ALL=ON
mkdir -m 777 a_script_logs
get_random_filename

recursion



#find . -type f -name "*.txt" 
